<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PathFindingAlgorithmsDemo">

    <local:RadioButtonEnumConverter x:Key="radioButtonEnumConverter" />

    <Style x:Key="imageStyle" TargetType="Image">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Stretch" Value="Fill"/>
    </Style>

    <Style x:Key="borderStyle" TargetType="Border">
        <Setter Property="Margin" Value="2, 5, 2, 2"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="baseTextBlock" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="baseStackPanel" TargetType="StackPanel">
        <Setter Property="Margin" Value="2"/>
    </Style>

    <Style x:Key="comboBoxStyle" TargetType="ComboBox">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="IsEditable" Value="False"/>
    </Style>

    <Style x:Key="verticalSeparator" TargetType="Rectangle">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Width" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Stroke" Value="Gray"/>
    </Style>

    <Style x:Key="baseButton" TargetType="Button">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style x:Key="baseTextBox" TargetType="TextBox">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="stepByStepStartButton" TargetType="Button" BasedOn="{StaticResource baseButton}">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsStepByStepMode}" Value="False" />
                    <Condition Binding="{Binding IsRunning}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsStepByStepMode}" Value="True" />
                    <Condition Binding="{Binding IsRunning}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="True"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsStepByStepMode}" Value="False" />
                    <Condition Binding="{Binding IsRunning}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsStepByStepMode}" Value="True" />
                    <Condition Binding="{Binding IsRunning}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="stepByStepStopButton" TargetType="Button" BasedOn="{StaticResource baseButton}">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsStepByStepMode}" Value="False" />
                    <Condition Binding="{Binding IsRunning}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsStepByStepMode}" Value="True" />
                    <Condition Binding="{Binding IsRunning}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsStepByStepMode}" Value="False" />
                    <Condition Binding="{Binding IsRunning}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsStepByStepMode}" Value="True" />
                    <Condition Binding="{Binding IsRunning}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="True"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>